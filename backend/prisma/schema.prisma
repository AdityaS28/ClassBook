datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @default(USER)
  firstName String?  // optional for now
  lastName  String?  // optional for now
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings  Booking[]
  auditLogs AuditLog[]
}

model Class {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions Session[]
}

model Session {
  id        Int      @id @default(autoincrement())
  dateTime  DateTime
  capacity  Int
  classId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  class    Class     @relation(fields: [classId], references: [id])
  bookings Booking[]
}

model Booking {
  id        Int      @id @default(autoincrement())
  userId    Int
  sessionId Int
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  session Session @relation(fields: [sessionId], references: [id])

  @@unique([userId, sessionId]) // prevent double booking
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  userId    Int?
  action    String
  details   String?
  createdAt DateTime @default(now())

  user User? @relation(fields: [userId], references: [id])
}
